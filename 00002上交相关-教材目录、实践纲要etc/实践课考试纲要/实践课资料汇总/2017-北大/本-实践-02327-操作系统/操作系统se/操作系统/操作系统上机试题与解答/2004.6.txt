6月１号上午：ＯＳ上机，磁盘旋转调度算法．．ＴＸＴ文件已经给出．
纯编程的哎！
ＦＩＬＥ　＊　fp  ,fopen 一定要熟悉哦！
***********************************************************************************************
6月1号下午:
模拟利用位示图法进行内存空闲页面的分配

1． 输入：
“位示图”文件用于表示内存空闲页面，由0（表示空闲）和1（表示分配）组成。每行32个，共16行。输入文件包括若干行，每行是位示图的一行，用‘0’‘1’字符串（不能有空格）表示每一行各位的值。
input.txt是一个输入文件格式的示例
2． 处理要求：
程序运行时，首先提示“请输入位示图文件的文件名：”；输入文件名后，程序将读入该文件中的有关数据。
再提示“请输入申请的页面个数：”，输入一个页面个数N后，程序执行，选择可以分配的满足要求的连续N个页面。（申请内存块时，可在位示图中从头查找为0的字位，将其改为1。）
要考虑一些边界问题。
3． 输出要求：
（1）显示本次分配的第1个页面在位示图中的行号和列号。
（2）显示分配完成后，新的位示图布局。
输出文件格式：
第一行输出分配起始位置的行列号，行号在前，列号在后，以空格相隔
第二行开始按照输入文件的格式输出更新后的位示图
输出内容中除了要求的内容不要包括任何其他内容
4． 文件名约定
提交的源程序名字：source.c或者source.cpp（依据所用语言确定）
输入文件名字：可由用户指定
结果输出到result.txt中
5． 测试说明：测试教师将事先准备好一组测试文件，格式如前所述，从中为每个程序随机指定一至三个作为输入文件（被测试者需从键盘输入指定文件的文件名），并查看程序输出结果。
***************************************************************************************
6月2号
模拟可变分区管理方案之空闲区回收算法

1． 输入：
（1）“空闲区表”文件，每一行包含空闲区起始地址、长度两项（均用整数表示，并用空格
分隔开）。
（2）进程新归还的空闲区起始地址和长度。
下面是一个示意：
15 23
48 20
98 12
2． 处理要求：
程序运行时，首先提示“请输入空闲区表文件的文件名：”，输入一个文件名后，程序将读
入该文件中的有关数据。
再提示“请输入新归还空闲区的起始地址和长度：”，输入两个整数后，按照回收算法完成
空闲区的回收工作（要考虑各种可能的情况）。
3． 输出要求：
输出新的空闲区表，每一行包括空闲区起始地址、长度两项。
4． 文件名约定
 提交的源程序名字：sourceXXX.c或者sourceXXX.cpp（依据所用语言确定）
 输入文件名字：可由用户指定
 结果输出到resultXXX.txt中
其中：XXX为账号。
5． 测试说明：测试教师将事先准备好一组文件（格式为*.txt），从中为每个程序随机指定
一至三个作为输入文件（被测试者需从键盘输入指定文件的文件名），并查看程序输出结果。




北大“操作系统”上机考试题（6月2日）  
2004-6-2 13:41:37  北京自考热线  wequ-22  阅读13次 
   
模拟死锁检测算法

1． 输入：
“资源分配表”文件，每一行包含资源编号、进程编号两项（均用整数表示，并用空格分隔开），记录资源分配给了哪个进程。
“进程等待表”文件，每一行包含进程编号、资源编号两项（均用整数表示，并用空格分隔开），记录进程正在等待哪个资源。
下面是一个示例：
资源分配表：
1 1
2 2
3 3
进程等待表：
1 2
2 3
3 1
2． 处理要求：
程序运行时，首先提示“请输入资源分配表文件的文件名：”；再提示“请输入进程等待表文件的文件名：”。
输入两个文件名后，程序将读入两个文件中的有关数据，并按照死锁检测算法进行检测。
3． 输出要求：
第一行输出检测结果：有死锁 或 无死锁。
第二行输出进程循环等待队列，即进程编号（如果有死锁）。
4． 文件名约定
提交的源程序名字：sourceXXX.c或者sourceXXX.cpp（依据所用语言确定）
输入文件名字：可由用户指定
结果输出到resultXXX.txt中
其中：XXX为账号。
5． 死锁检测算法：当任一进程Pj申请一个已被其他进程占用的资源ri时，进行死锁检测。检测算法通过反复查找进程等待表和资源分配表，来确定进程Pj对资源ri的请求是否导致形成环路，若是，便确定出现死锁。
6． 测试说明：测试教师将事先准备好一组文件（格式为*.txt），从中为每个程序随机指定一至三个作为输入文件（被测试者需从键盘输入指定文件的文件名），并查看程序输出结果。
 
*************************************************************************************************** 

请分别用FIFO、OPT算法实现“页面置换”的模拟。模拟程序的要求如下：
输入：页面流文件，其中存储的是一系列页面号，用来模拟待换入的页面。
输出：对于每一个页面流文件，标出所使用的算法，
并且：每换入一个页面（即：每读入一个页面号），判断是否有页面需要被换出。
若有，把被换出的页面号输出到屏幕；若没有，则要在输出中用特殊标记说明。
初始条件：采用三个页框，初始时均为空。
测试说明：测试教师将事先准备好一组文件，
从中为每个程序随机指定一至三个作为输入文件
（被测试者需从键盘输入指定文件的文件名），并查看程序输出结果。
测试用例：书上p119页，在本地盘建立一个test.txt文件，内容为例中的页面号
例如：test文本内容为：
      4 3 2 1 4 3 5 4 3 2 1 5
     
6月3日未考
***************************************************************************************************
6月四号上午的考题
模拟最高响应比优先作业调度算法
**********************
输入：作业流文件，其中存储的是一系列要执行的作业，
每个作业包括三个数据项：
作业号、作业进入系统的时间（用一整数表示，如10：10，表示成1010）、估计执行时间（单位分）
参数用空格隔开，下面是示例：
1 800 50
2 815 30
3 830 25
4 835 20
5 845 15
6 900 10
7 920 5
其中调度时刻为最后一个作业到达系统的时间！
输出作业号！进入内存的时间！每行输出一个作业信息！
************************************************************************************************
 6月4号下午题~~~
模拟第二次机会页面置换算法
1． 输入：
页面流文件，其中存储的是一系列页面号（页面号用整数表示，用空格作为分隔符），用来模拟待换入的页面。
下面是一个示意：
1 2 3 4 1 2 5 1 2 3 4 5
2． 处理要求：
程序运行时，首先提示“请输入页面流文件的文件名：”，输入一个文件名后，程序将读入该文件中的有关数据。
初始条件：采用三个页框，初始时均为空。
根据第二次机会算法对数据进行处理。
3． 输出要求：
每换入一个页面（即：每读入一个页面号），判断是否有页面需要被换出。若有，把被换出的页面号输出到屏幕上；若没有，则输出一个“*”号。
4． 文件名约定
提交的源程序名字：sourceXXX.c或者sourceXXX.cpp（依据所用语言确定）
输入文件名字：可由用户指定
其中：XXX为账号。
5． 测试说明：测试教师将事先准备好一组文件（格式为*.txt），从中为每个程序随机指定一至三个作为输入文件（被测试者需从键盘输入指定文件的文件名），并查看程序输出结果。
6． 第二次机会算法：对FIFO算法做如下简单的修改：发生替换时，先检查最老页面的R（访问）位。如果为0，那么此页面是最早被换入的，而且近期没有被访问，可以立刻被替换掉；如果R位为1，就清除R位，并修改它的装入时间，使它就像刚被装入的新页面一样，然后继续搜索可替换的最老页面。
我没做出来~~~~
***************************************************************************************************
6月5日上午是银行家算法
******************************************************************************************************
6月5日下午是UNIX的成组链接法的设计与实现，
主要考的是用文件输入一堆空闲块的 号码，然后利用UNIX的成组链接法的管理方法，10块成一组，并且可以实现输入一个数字N,然后把N个空闲块占用，然后输出专用块的大小，空闲号。 

 